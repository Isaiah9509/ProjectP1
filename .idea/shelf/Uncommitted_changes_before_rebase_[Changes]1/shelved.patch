Index: app/src/test/java/com/revature/service/UserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/revature/service/UserServiceTest.java b/app/src/test/java/com/revature/service/UserServiceTest.java
deleted file mode 100644
--- a/app/src/test/java/com/revature/service/UserServiceTest.java	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ /dev/null	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
@@ -1,33 +0,0 @@
-package com.revature.service;
-
-import org.junit.jupiter.api.Test;
-
-class UserServiceTest {
-
-    @Test
-    void itShouldCheckIfUserExistById() {
-
-    }
-
-    @Test
-    void verifyLogin() {
-    }
-
-    @Test
-    void createUser() {
-    }
-
-    @Test
-    void deleteUser() {
-    }
-
-    @Test
-    void getAllUsers() {
-    }
-
-
-
-    @Test
-    void updateUser() {
-    }
-}
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$/../../Project0/project0-template\" />\r\n        <option name=\"gradleHome\" value=\"C:/Gradle/gradle-7.3.3\" />\r\n        <option name=\"gradleJvm\" value=\"#JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$/../../Project0/project0-template\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n      <GradleProjectSettings>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleHome\" value=\"$PROJECT_DIR$/../../../../../../Gradle/gradle-7.3.3\" />\r\n        <option name=\"gradleJvm\" value=\"#JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/.idea/gradle.xml	(date 1644621071660)
@@ -4,6 +4,8 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="delegatedBuild" value="true" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$/../../Project0/project0-template" />
         <option name="gradleHome" value="C:/Gradle/gradle-7.3.3" />
@@ -15,9 +17,11 @@
         </option>
       </GradleProjectSettings>
       <GradleProjectSettings>
+        <option name="delegatedBuild" value="false" />
+        <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleHome" value="$PROJECT_DIR$/../../../../../../Gradle/gradle-7.3.3" />
+        <option name="gradleHome" value="C:/Gradle/gradle-7.3.3" />
         <option name="gradleJvm" value="#JAVA_HOME" />
         <option name="modules">
           <set>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * This file was generated by the Gradle 'init' task.\r\n *\r\n * This generated file contains a sample Java application project to get you started.\r\n * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle\r\n * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html\r\n */\r\n\r\nplugins {\r\n    // Apply the application plugin to add support for building a CLI application in Java.\r\n    id 'application'\r\n    id \"org.sonarqube\" version \"3.3\"\r\n    id 'java'\r\n\r\n}\r\n\r\nrepositories {\r\n    // Use Maven Central for resolving dependencies.\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    // --- log4j maven dependency\r\n    // https://mvnrepository.com/artifact/log4j/log4j\r\n    implementation 'log4j:log4j:1.2.17'\r\n\r\n    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'\r\n    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'\r\n    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'\r\n// https://mvnrepository.com/artifact/junit/junit\r\n    testImplementation group: 'junit', name: 'junit', version: '4.13.1'\r\n// https://mvnrepository.com/artifact/org.mockito/mockito-core\r\n    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'\r\n    // This dependency is used by the application.\r\n    implementation 'com.google.guava:guava:30.1.1-jre'\r\n    // Javalin\r\n    implementation group: 'io.javalin', name: 'javalin', version: '4.3.0'\r\n    //Jackson dependency.\r\n    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta4'\r\n// https://mvnrepository.com/artifact/org.postgresql/postgresql\r\n    implementation 'org.postgresql:postgresql:42.2.18'\r\n}\r\ntest{\r\n    useJUnitPlatform()\r\n}\r\n\r\napplication {\r\n    // Define the main class for the application.\r\n    mainClass = 'newProject01.App'\r\n}\r\n\r\n\r\nsonarqube {\r\n    properties {\r\n        property \"sonar.projectKey\", \"Isaiah9509_ProjectP1\"\r\n        property \"sonar.organization\", \"isaiah9509\"\r\n        property \"sonar.host.url\", \"https://sonarcloud.io\"\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/app/build.gradle	(date 1644620813617)
@@ -20,26 +20,34 @@
 }
 
 dependencies {
-    // --- log4j maven dependency
-    // https://mvnrepository.com/artifact/log4j/log4j
-    implementation 'log4j:log4j:1.2.17'
+    // Use JUnit test framework.
+    testImplementation 'junit:junit:4.13.2'
 
-    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'
-    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
-    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
-// https://mvnrepository.com/artifact/junit/junit
-    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
-// https://mvnrepository.com/artifact/org.mockito/mockito-core
-    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
+    // https://mvnrepository.com/artifact/org.mockito/mockito-core
+    testImplementation 'org.mockito:mockito-core:4.2.0'
+
     // This dependency is used by the application.
     implementation 'com.google.guava:guava:30.1.1-jre'
-    // Javalin
-    implementation group: 'io.javalin', name: 'javalin', version: '4.3.0'
-    //Jackson dependency.
-    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta4'
-// https://mvnrepository.com/artifact/org.postgresql/postgresql
-    implementation 'org.postgresql:postgresql:42.2.18'
+
+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
+    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
+
+    // https://mvnrepository.com/artifact/log4j/log4j
+    implementation 'log4j:log4j:1.2.17'
+
+    // https://mvnrepository.com/artifact/org.postgresql/postgresql
+    implementation 'org.postgresql:postgresql:42.3.1'
+
+    // https://mvnrepository.com/artifact/io.javalin/javalin
+    implementation 'io.javalin:javalin:4.1.1'
+
+    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
+    implementation 'org.slf4j:slf4j-simple:1.7.32'
+
+    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
+    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
 }
+
 test{
     useJUnitPlatform()
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e8ff5612-a4de-4135-b16c-977898bc8acc\" name=\"Changes\" comment=\"Finished out controllers\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/JavalinApp.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/JavalinApp.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/ReimbursementDriver.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/ReimbursementDriver.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/controllers/AuthController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/controllers/AuthController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/controllers/ReimbursementController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/controllers/ReimbursementController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/controllers/UserController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/controllers/UserController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/dao/UserDaoImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/dao/UserDaoImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/models/Reimbursement.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/models/Reimbursement.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/models/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/models/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/service/ReimbursementService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/service/ReimbursementService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/revature/service/UserService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/revature/service/UserService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/test/java/com/revature/service/ReimbursementServiceTest.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/test/java/com/revature/service/UserServiceTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/test/java/com/revature/service/UserServiceTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeInsightWorkspaceSettings\">\r\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$/../../Project0/project0-template\">\r\n      <ProjectState />\r\n    </projectState>\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view />\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"JUnit3 Test Class\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit4 Test Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Isaiah-Payne\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24ehqdIV2U4wZH2NBrbtUr3uE6R\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"SONARLINT_PRECOMMIT_ANALYSIS\" value=\"true\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\" value=\"JUnit5\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit3\" value=\"junit.framework.TestCase\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4\" value=\"\" />\r\n    <property name=\"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\" value=\"\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n      <recent name=\"junit.framework.TestCase\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"com.revature.service\" />\r\n      <recent name=\"com.revature.models\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.ReimbursementDriver\">\r\n    <configuration name=\"ReimbursementDriver\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.revature.ReimbursementDriver\" />\r\n      <module name=\"newProject01.app.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.revature.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ReimbursementServiceTest\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":app:test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;com.revature.service.ReimbursementServiceTest&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"ReimbursementServiceTest.approveReimbursementStatus\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":app:test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;com.revature.service.ReimbursementServiceTest.approveReimbursementStatus&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"UserServiceTest\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":app:test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;com.revature.service.UserServiceTest&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"UserTest.getUserRole\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":app:test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;com.revature.models.UserTest.getUserRole&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.ReimbursementServiceTest\" />\r\n        <item itemvalue=\"Gradle.ReimbursementServiceTest.approveReimbursementStatus\" />\r\n        <item itemvalue=\"Gradle.UserServiceTest\" />\r\n        <item itemvalue=\"Application.ReimbursementDriver\" />\r\n        <item itemvalue=\"Gradle.UserTest.getUserRole\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e8ff5612-a4de-4135-b16c-977898bc8acc\" name=\"Changes\" comment=\"&quot;shifted stuff around on my branch&quot;\" />\r\n      <created>1643997151958</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1643997151958</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/../../Project0/project0-template\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"&quot;shifted stuff around on my branch&quot;\" />\r\n    <MESSAGE value=\"Finished out controllers\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Finished out controllers\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/.idea/workspace.xml	(date 1644621074735)
@@ -5,20 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e8ff5612-a4de-4135-b16c-977898bc8acc" name="Changes" comment="Finished out controllers">
+      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sonarlint/issuestore/index.pb" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/JavalinApp.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/JavalinApp.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/ReimbursementDriver.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/ReimbursementDriver.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/controllers/AuthController.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/controllers/AuthController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/controllers/ReimbursementController.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/controllers/ReimbursementController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/controllers/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/controllers/UserController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/dao/UserDaoImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/dao/UserDaoImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/models/Reimbursement.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/models/Reimbursement.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/models/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/models/User.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/service/ReimbursementService.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/service/ReimbursementService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/revature/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/revature/service/UserService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/test/java/com/revature/service/ReimbursementServiceTest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/test/java/com/revature/service/UserServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/test/java/com/revature/service/UserServiceTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/test/java/com/revature/service/UserServiceTest.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -42,7 +37,25 @@
         <task path="$PROJECT_DIR$">
           <activation />
         </task>
-        <projects_view />
+        <task path="$PROJECT_DIR$/app">
+          <activation />
+        </task>
+        <projects_view>
+          <tree_state>
+            <expand>
+              <path>
+                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
+                <item name="newProject01" type="f1a62948:ProjectNode" />
+              </path>
+              <path>
+                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
+                <item name="newProject01" type="f1a62948:ProjectNode" />
+                <item name="app" type="2d1252cf:ModuleNode" />
+              </path>
+            </expand>
+            <select />
+          </tree_state>
+        </projects_view>
       </state>
     </system>
   </component>
@@ -52,9 +65,9 @@
         <option value="Enum" />
         <option value="Interface" />
         <option value="JUnit3 Test Class" />
-        <option value="Class" />
+        <option value="JUnit5 Test Class" />
         <option value="JUnit4 Test Class" />
-        <option value="JUnit5 Test Class" />
+        <option value="Class" />
       </list>
     </option>
   </component>
@@ -90,7 +103,7 @@
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="SONARLINT_PRECOMMIT_ANALYSIS" value="true" />
-    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit4" />
     <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit3" value="junit.framework.TestCase" />
     <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4" value="" />
     <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
@@ -98,7 +111,7 @@
     <property name="project.structure.last.edited" value="Modules" />
     <property name="project.structure.proportion" value="0.0" />
     <property name="project.structure.side.proportion" value="0.0" />
-    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
+    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.project.gradle" />
   </component>
   <component name="RecentsManager">
     <key name="CreateTestDialog.Recents.Supers">
@@ -110,7 +123,7 @@
       <recent name="com.revature.models" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.ReimbursementDriver">
+  <component name="RunManager" selected="JUnit.UserServiceTest">
     <configuration name="ReimbursementDriver" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.revature.ReimbursementDriver" />
       <module name="newProject01.app.main" />
@@ -124,7 +137,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="ReimbursementServiceTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="UserServiceTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -137,7 +150,7 @@
           <list>
             <option value=":app:test" />
             <option value="--tests" />
-            <option value="&quot;com.revature.service.ReimbursementServiceTest&quot;" />
+            <option value="&quot;com.revature.service.UserServiceTest&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -147,7 +160,7 @@
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="ReimbursementServiceTest.approveReimbursementStatus" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="UserServiceTest.createUser" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -160,7 +173,7 @@
           <list>
             <option value=":app:test" />
             <option value="--tests" />
-            <option value="&quot;com.revature.service.ReimbursementServiceTest.approveReimbursementStatus&quot;" />
+            <option value="&quot;com.revature.service.UserServiceTest.createUser&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -170,7 +183,7 @@
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="UserServiceTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="UserServiceTest.shouldThrowRuntimeException" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -183,7 +196,7 @@
           <list>
             <option value=":app:test" />
             <option value="--tests" />
-            <option value="&quot;com.revature.service.UserServiceTest&quot;" />
+            <option value="&quot;com.revature.service.UserServiceTest.shouldThrowRuntimeException&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -193,36 +206,28 @@
       <DebugAllEnabled>false</DebugAllEnabled>
       <method v="2" />
     </configuration>
-    <configuration name="UserTest.getUserRole" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
-      <ExternalSystemSettings>
-        <option name="executionName" />
-        <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="externalSystemIdString" value="GRADLE" />
-        <option name="scriptParameters" value="" />
-        <option name="taskDescriptions">
-          <list />
-        </option>
-        <option name="taskNames">
-          <list>
-            <option value=":app:test" />
-            <option value="--tests" />
-            <option value="&quot;com.revature.models.UserTest.getUserRole&quot;" />
-          </list>
-        </option>
-        <option name="vmOptions" />
-      </ExternalSystemSettings>
-      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
-      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
-      <DebugAllEnabled>false</DebugAllEnabled>
-      <method v="2" />
+    <configuration name="UserServiceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="newProject01.app.test" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.revature.service.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.revature.service" />
+      <option name="MAIN_CLASS_NAME" value="com.revature.service.UserServiceTest" />
+      <option name="TEST_OBJECT" value="class" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Gradle.ReimbursementServiceTest" />
-        <item itemvalue="Gradle.ReimbursementServiceTest.approveReimbursementStatus" />
+        <item itemvalue="JUnit.UserServiceTest" />
         <item itemvalue="Gradle.UserServiceTest" />
+        <item itemvalue="Gradle.UserServiceTest.shouldThrowRuntimeException" />
+        <item itemvalue="Gradle.UserServiceTest.createUser" />
         <item itemvalue="Application.ReimbursementDriver" />
-        <item itemvalue="Gradle.UserTest.getUserRole" />
       </list>
     </recent_temporary>
   </component>
@@ -256,4 +261,10 @@
     <MESSAGE value="Finished out controllers" />
     <option name="LAST_COMMIT_MESSAGE" value="Finished out controllers" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/newProject01$UserServiceTest.ic" NAME="UserServiceTest Coverage Results" MODIFIED="1644618407211" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/newProject01$ReimbursementDriver.ic" NAME="ReimbursementDriver Coverage Results" MODIFIED="1644619267498" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>com.revature.*</FILTER>
+    </SUITE>
+  </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/revature/service/ReimbursementService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.revature.service;\r\n\r\nimport com.revature.dao.ReimbursementDao;\r\nimport com.revature.dao.ReimbursementDaoImpl;\r\nimport com.revature.models.Reimbursement;\r\n\r\nimport java.util.List;\r\n\r\npublic class ReimbursementService {\r\n\r\n\r\n    private ReimbursementDao reimbursementDao = new ReimbursementDaoImpl();\r\n\r\n    //Approve or Deny a reimbursement\r\n    public boolean changeReimbursementStatus(int reimb_id, int resolver_id, boolean approve){\r\n        //If the approve boolean is true, it will try to approve the reimbursement.\r\n        if(approve){\r\n            boolean success = reimbursementDao.approveReimbursement(reimb_id, resolver_id);\r\n            //if the approval works, it will return true.\r\n            if(success){\r\n                return true;\r\n            }\r\n            //If the approval doesn't work, ti will return false.\r\n                return false;\r\n            //If the approve boolean is false, it will try to deny the reimbursement.\r\n        } else if (!approve){\r\n            //If the success is true, it will return true.\r\n            boolean success = reimbursementDao.denyReimbursement(reimb_id, resolver_id);\r\n            if(success) {\r\n                return true;\r\n            }\r\n            //Otherwise, it will return false.\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n    //Get all pending reimbursements by Author\r\n    public List<Reimbursement> getAllPendingReimbursementsByAuthor(int author_id){\r\n        return reimbursementDao.getAllPendingReimbursementsByAuthor(author_id);\r\n    }\r\n\r\n    public List<Reimbursement> getAllResolvedReimbursementsByAuthor(int author_id){\r\n        return reimbursementDao.getAllResolvedReimbursementsByAuthor(author_id);\r\n    }\r\n\r\n    //Get all pending reimbursements\r\n    public List<Reimbursement> getAllPendingReimbursements(){\r\n        return reimbursementDao.getAllPendingReimbursements();\r\n    }\r\n\r\n    //Get all resolved reimbursements\r\n    public List<Reimbursement> getAllResolvedReimbursements(){\r\n        return reimbursementDao.getAllResolvedReimbursements();\r\n    }\r\n    //Get reimbursements by ID.\r\n    public List<Reimbursement> getAllReimbursementsByAuthor(int author_id){\r\n        return reimbursementDao.getAllReimbursementsByAuthor(author_id);\r\n    }\r\n\r\n    //Create a Reimbursement\r\n    public boolean createReimbursement(Reimbursement reimbursement){\r\n        return reimbursementDao.createReimbursement(reimbursement);\r\n    }\r\n\r\n    //Delete a Reimbursement\r\n    public boolean deleteReimbursement(int id){\r\n        return reimbursementDao.deleteReimbursement(id);\r\n    }\r\n    //Update a Reimbursement\r\n    public boolean updateReimbursement(Reimbursement reimbursement){\r\n        return reimbursementDao.updateReimbursement(reimbursement);\r\n    }\r\n    //Get all reimbursements\r\n    public List<Reimbursement> getAllReimbursements(){\r\n\r\n        return reimbursementDao.getAllReimbursements();\r\n    }\r\n    //Get a reimbursement by ID.\r\n    public Reimbursement getReimbursementById(int id){\r\n        return reimbursementDao.getReimbursementById(id);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/revature/service/ReimbursementService.java b/app/src/main/java/com/revature/service/ReimbursementService.java
--- a/app/src/main/java/com/revature/service/ReimbursementService.java	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/app/src/main/java/com/revature/service/ReimbursementService.java	(date 1644619075447)
@@ -1,7 +1,6 @@
 package com.revature.service;
 
 import com.revature.dao.ReimbursementDao;
-import com.revature.dao.ReimbursementDaoImpl;
 import com.revature.models.Reimbursement;
 
 import java.util.List;
@@ -9,7 +8,11 @@
 public class ReimbursementService {
 
 
-    private ReimbursementDao reimbursementDao = new ReimbursementDaoImpl();
+    private ReimbursementDao reimbursementDao;
+
+    public ReimbursementService(ReimbursementDao reimbursementDao){
+    this.reimbursementDao = reimbursementDao;
+    }
 
     //Approve or Deny a reimbursement
     public boolean changeReimbursementStatus(int reimb_id, int resolver_id, boolean approve){
Index: app/src/main/java/com/revature/ReimbursementDriver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.revature;\r\n\r\nimport org.apache.log4j.BasicConfigurator;\r\n\r\npublic class ReimbursementDriver {\r\n    public static void main(String[] args) {\r\n        BasicConfigurator.configure();\r\n        JavalinApp app = new JavalinApp();\r\n        app.start(8070);\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/revature/ReimbursementDriver.java b/app/src/main/java/com/revature/ReimbursementDriver.java
--- a/app/src/main/java/com/revature/ReimbursementDriver.java	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/app/src/main/java/com/revature/ReimbursementDriver.java	(date 1644616873513)
@@ -6,7 +6,7 @@
     public static void main(String[] args) {
         BasicConfigurator.configure();
         JavalinApp app = new JavalinApp();
-        app.start(8070);
+        app.start(8090);
 
     }
 
Index: app/src/main/java/com/revature/controllers/ReimbursementController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.revature.controllers;\r\n\r\nimport com.revature.models.Reimbursement;\r\nimport com.revature.models.ReimbursementType;\r\nimport com.revature.models.User;\r\nimport com.revature.service.ReimbursementService;\r\nimport com.revature.util.LoggingUtil;\r\nimport io.javalin.http.Context;\r\n\r\nimport java.util.List;\r\n\r\nimport static java.lang.Integer.parseInt;\r\n\r\npublic class ReimbursementController {\r\n    private ReimbursementService reimbursementService = new ReimbursementService();\r\n\r\n    public void handleCreateReimbursement(Context ctx){\r\n        LoggingUtil.logger.info(\"Attempting to create a reimbursement\");\r\n        double amount = Double.parseDouble(ctx.formParam(\"Amount\"));\r\n        int author_id = Integer.parseInt(ctx.pathParam(\"id\"));\r\n        ReimbursementType reimbursementType = ReimbursementType.valueOf(ctx.formParam(\"ReimbursementType\"));\r\n\r\n        Reimbursement reimbursement = new Reimbursement(amount, author_id, reimbursementType);\r\n        if(reimbursementService.createReimbursement(reimbursement)){\r\n            LoggingUtil.logger.info(\"User id:\" + author_id + \" created a reimbursement\");\r\n            ctx.result(\"Successfully created a reimbursement under ID: \" + author_id);\r\n            ctx.status(200);\r\n        } else {\r\n            LoggingUtil.logger.warn(\"User id:\" + author_id + \" could not create a reimbursement.\");\r\n            ctx.status(403);\r\n            ctx.result(\"Could not create a reimbursement.\");\r\n        }\r\n    }\r\n\r\n\r\n    public void handleGetAllReimbursements(Context ctx){\r\n        List<Reimbursement> reimbursementList = reimbursementService.getAllReimbursements();\r\n        System.out.println(reimbursementList);\r\n       if(reimbursementList.isEmpty()){\r\n           ctx.status(400);\r\n           ctx.result(\"There are no reimbursements\");\r\n       } else{\r\n           ctx.status(200);\r\n           ctx.json(reimbursementList);\r\n       }\r\n    }\r\n    public void handleGetReimbursementsById(Context ctx){\r\n        int id = Integer.parseInt(ctx.pathParam(\"id\"));\r\n        Reimbursement reimbursement = reimbursementService.getReimbursementById(id);\r\n        if(reimbursement==null){\r\n            ctx.status(400);\r\n            ctx.result(\"Reimbursement does not exist\");\r\n        }else{\r\n            ctx.status(200);\r\n            ctx.json(reimbursement);\r\n        }\r\n    }\r\n\r\n    public void handleDenyReimbursement(Context ctx){\r\n        int id = parseInt(ctx.pathParam(\"id\"));\r\n        User user = ctx.bodyAsClass(User.class);\r\n\r\n        if(reimbursementService.changeReimbursementStatus(id,user.getId(),false)){\r\n            ctx.status(200);\r\n            ctx.result(\"You successfully denied the reimbursement\");\r\n        }else{\r\n            ctx.status(400);\r\n            ctx.result(\"Reimbursement doesn't exist\");\r\n        }\r\n    }\r\n\r\n    public void handleApproveReimbursement(Context ctx){\r\n        int id = parseInt(ctx.pathParam(\"id\"));\r\n        User user = ctx.bodyAsClass(User.class);\r\n\r\n        if(reimbursementService.changeReimbursementStatus(id,user.getId(),true)){\r\n            ctx.status(200);\r\n            ctx.result(\"You successfully approved the reimbursement\");\r\n        }else{\r\n            ctx.status(400);\r\n            ctx.result(\"Reimbursement doesn't exist\");\r\n        }\r\n    }\r\n\r\n    public void handleGetReimbursementsByAuthor(Context ctx){\r\n        int id = parseInt(ctx.pathParam(\"id\"));\r\n        List<Reimbursement> reimbursement= reimbursementService.getAllReimbursementsByAuthor(id);\r\n        if(reimbursement.isEmpty()){\r\n            ctx.status(403);\r\n            ctx.result(\"There are no reimbursements for this author\");\r\n        }else{\r\n            ctx.status(200);\r\n            ctx.json(reimbursement);\r\n        }\r\n    }\r\n    public void handleGetAllReimbursementPending(Context ctx){\r\n        List<Reimbursement> reimbursementPending =reimbursementService.getAllPendingReimbursements();\r\n        System.out.println(reimbursementPending);\r\n        if(reimbursementPending.isEmpty()){\r\n            ctx.result(\"There are no pending reimbursements\");\r\n        }\r\n        else{\r\n            ctx.status(200);\r\n            ctx.json(reimbursementPending);\r\n        }\r\n    }\r\n\r\n    public void handleGetAllResolvedReimbursement(Context ctx){\r\n        List<Reimbursement> reimbursementResolve =reimbursementService.getAllResolvedReimbursements();\r\n        if(reimbursementResolve.isEmpty()){\r\n            ctx.result(\"There are no resolved reimbursements\");\r\n        }\r\n        else{\r\n            ctx.status(200);\r\n            ctx.json(reimbursementResolve);\r\n        }\r\n    }\r\n    public void handleGetAllPendingByUserID(Context ctx){\r\n        int id = Integer.parseInt(ctx.pathParam(\"id\"));\r\n        List<Reimbursement> pendingReimbursemetsByUsers =reimbursementService.getAllPendingReimbursementsByAuthor(id);\r\n        System.out.println(id);\r\n        if(pendingReimbursemetsByUsers.isEmpty()){\r\n            ctx.result(\"There are no pending reimbursement\");\r\n        }\r\n        else{\r\n            ctx.status(200);\r\n            ctx.json(pendingReimbursemetsByUsers);\r\n        }\r\n    }\r\n    // ---\r\n     public void  handleGetResolvedByUserID (Context ctx){\r\n    int id = Integer.parseInt(ctx.pathParam(\"id\"));\r\n    List<Reimbursement> resolvedReimbursemetsByUsers =reimbursementService.getAllResolvedReimbursementsByAuthor(id);\r\n      if(resolvedReimbursemetsByUsers.isEmpty()){\r\n          ctx.result(\"there are no any resolved reimbursement yet\");\r\n      }\r\n      else{\r\n          ctx.status(200);\r\n          ctx.json(resolvedReimbursemetsByUsers);}\r\n}\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/revature/controllers/ReimbursementController.java b/app/src/main/java/com/revature/controllers/ReimbursementController.java
--- a/app/src/main/java/com/revature/controllers/ReimbursementController.java	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/app/src/main/java/com/revature/controllers/ReimbursementController.java	(date 1644619229733)
@@ -1,5 +1,7 @@
 package com.revature.controllers;
 
+import com.revature.dao.ReimbursementDao;
+import com.revature.dao.ReimbursementDaoImpl;
 import com.revature.models.Reimbursement;
 import com.revature.models.ReimbursementType;
 import com.revature.models.User;
@@ -12,7 +14,8 @@
 import static java.lang.Integer.parseInt;
 
 public class ReimbursementController {
-    private ReimbursementService reimbursementService = new ReimbursementService();
+    private ReimbursementDao reimbursementDao = new ReimbursementDaoImpl();
+    private ReimbursementService reimbursementService = new ReimbursementService(reimbursementDao);
 
     public void handleCreateReimbursement(Context ctx){
         LoggingUtil.logger.info("Attempting to create a reimbursement");
Index: app/src/main/java/com/revature/controllers/AuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.revature.controllers;\r\n\r\nimport com.revature.models.User;\r\nimport com.revature.service.ReimbursementService;\r\nimport com.revature.service.UserService;\r\nimport com.revature.util.LoggingUtil;\r\nimport io.javalin.http.Context;\r\nimport io.javalin.http.UnauthorizedResponse;\r\n\r\npublic class AuthController {\r\n    private UserService userService = new UserService();\r\n    private ReimbursementService reimbursementService = new ReimbursementService();\r\n\r\n\r\n    public void handleLogin(Context ctx){\r\n        LoggingUtil.logger.info(\"Attempting to login\");\r\n        String email = ctx.formParam(\"email\");\r\n        String password = ctx.formParam(\"password\");\r\n\r\n        User user = userService.getUserByEmailAndPassword(email, password);\r\n        if(user==null){\r\n            throw new UnauthorizedResponse(\"Incorrect username and password\");\r\n        }\r\n        LoggingUtil.logger.info(\"User \" + user.getEmail() + \" has logged in\");\r\n        ctx.result(\"Logged in\");\r\n        String authKey = String.valueOf(user.getUserRole());\r\n        String userToken = user.getF_name() + \"^_^\" + user.getL_name();\r\n\r\n        ctx.header(\"Authorization\", authKey);\r\n        ctx.header(\"User-Token\", userToken);\r\n    }\r\n\r\n    public void authorizeEmployeeToken(Context ctx){\r\n        LoggingUtil.logger.info(\"Verifying employee is logged in\");\r\n\r\n        if(ctx.header(\"Authorization\")!= null){\r\n            if(ctx.header(\"Authorization\").equals(\"EMPLOYEE\")) {\r\n                LoggingUtil.logger.info(\"User has Employee authorization\");\r\n                ctx.status(200);\r\n            } else {\r\n                throw new UnauthorizedResponse(\"You need to be an employee to use this feature\");\r\n            }\r\n        } else {\r\n            throw new UnauthorizedResponse(\"You need to login to use this feature\");\r\n        }\r\n\r\n    }\r\n\r\n    public void authorizeManagerToken(Context ctx){\r\n        LoggingUtil.logger.info(\"Verifying manager is logged in\");\r\n\r\n        if(ctx.header(\"Authorization\")!= null){\r\n            if(ctx.header(\"Authorization\").equals(\"MANAGER\")) {\r\n                LoggingUtil.logger.info(\"User has Manager authorization\");\r\n                ctx.status(200);\r\n            } else {\r\n                throw new UnauthorizedResponse(\"You need to be a manager to use this feature\");\r\n            }\r\n        } else {\r\n            throw new UnauthorizedResponse(\"You need to login to use this feature\");\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/revature/controllers/AuthController.java b/app/src/main/java/com/revature/controllers/AuthController.java
--- a/app/src/main/java/com/revature/controllers/AuthController.java	(revision 55e37b176af860b60f363688e0ca30724f3a4df5)
+++ b/app/src/main/java/com/revature/controllers/AuthController.java	(date 1644619181621)
@@ -1,5 +1,7 @@
 package com.revature.controllers;
 
+import com.revature.dao.ReimbursementDao;
+import com.revature.dao.ReimbursementDaoImpl;
 import com.revature.models.User;
 import com.revature.service.ReimbursementService;
 import com.revature.service.UserService;
@@ -9,7 +11,8 @@
 
 public class AuthController {
     private UserService userService = new UserService();
-    private ReimbursementService reimbursementService = new ReimbursementService();
+    private ReimbursementDao reimbursementDao = new ReimbursementDaoImpl();
+    private ReimbursementService reimbursementService = new ReimbursementService(reimbursementDao);
 
 
     public void handleLogin(Context ctx){
